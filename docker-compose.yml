version: "3"

services:
  water_rights_visualizer_ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: water-rights-visualizer-ui
    ports:
      - "8000:8000"
    depends_on:
      - water_rights_visualizer_backend
      - water_rights_visualizer_api
    networks:
      - water_network

  water_rights_visualizer_api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: water-rights-visualizer-api
    restart: always
    command: "/init-api.sh ${WATER_RIGHTS_SOURCE:-S3}"
    env_file: ".env"
    ports:
      - "5000:5000"
    depends_on:
      - water_mongo
    volumes:
      - ${HOST_DATA_DIRECTORY:-${HOME}/data}:${CONTAINER_DATA_DIRECTORY:-/root/data}
    networks:
      - water_network

  water_rights_visualizer_backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    platform: "linux/amd64"
    container_name: water-rights-visualizer
    restart: always
    command: "/init.sh ${WATER_RIGHTS_SOURCE:-S3}"
    env_file: ".env"
    depends_on:
      - water_mongo
    volumes:
      - ${HOST_DATA_DIRECTORY:-${HOME}/data}:${CONTAINER_DATA_DIRECTORY:-/root/data}
    networks:
      - water_network

  water_mongo:
    image: mongo:7.0
    container_name: water-rights-visualizer-mongo
    command: ["--replSet", "rs0"]
    healthcheck:
      test: test $$(mongosh --port 27017 --quiet --eval "try {rs.initiate()} catch(e) {rs.status().ok}") -eq 1
      interval: 10s
      start_period: 30s
    env_file: ".env"
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    networks:
      - water_network

volumes:
  mongodata:
    driver: local

networks:
  water_network:
